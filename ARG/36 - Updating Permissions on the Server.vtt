WEBVTT

1
00:00:02.970 --> 00:00:04.710
<v Wes>Alright, before we even get into</v>

2
00:00:04.710 --> 00:00:05.770
doing any of the back end stuff,

3
00:00:05.770 --> 00:00:06.790
something I just noticed here,

4
00:00:06.790 --> 00:00:08.090
and this is something that bugs me a lot

5
00:00:08.090 --> 00:00:11.290
is when you can't like click anywhere around it

6
00:00:11.290 --> 00:00:14.200
and you have to actually click the little checkbox itself,

7
00:00:14.200 --> 00:00:15.050
that's really annoying.

8
00:00:15.050 --> 00:00:19.000
And the reason why I put a label around

9
00:00:19.000 --> 00:00:21.230
the input is so that we can make that label

10
00:00:21.230 --> 00:00:23.390
as big as possible and then you should be able to click

11
00:00:23.390 --> 00:00:24.730
anywhere inside of here.

12
00:00:24.730 --> 00:00:27.180
So let's go fix that real quick.

13
00:00:27.180 --> 00:00:31.010
If you open up the table.JS styled component

14
00:00:31.010 --> 00:00:33.530
and let's go ahead and write a new selector for labels

15
00:00:33.530 --> 00:00:36.110
that are only inside of the TD.

16
00:00:36.110 --> 00:00:39.350
So right here we'll say a label

17
00:00:39.350 --> 00:00:40.710
and let's just say background red

18
00:00:40.710 --> 00:00:42.310
just to see what we're working with.

19
00:00:42.310 --> 00:00:46.290
Good, then we want to display block on them

20
00:00:46.290 --> 00:00:48.930
because we want them to go as wide as possible, good,

21
00:00:48.930 --> 00:00:52.420
and now if I click on a label it's still not working.

22
00:00:52.420 --> 00:00:55.240
Let's open up our capital P permissions

23
00:00:55.240 --> 00:00:57.810
and see if we've got everything lined up properly.

24
00:00:59.280 --> 00:01:00.350
Got this label here

25
00:01:01.200 --> 00:01:02.860
and we've got the input,

26
00:01:02.860 --> 00:01:05.561
so the thing we're missing is an ID

27
00:01:05.561 --> 00:01:07.810
that is matched with this for.

28
00:01:07.810 --> 00:01:11.520
So actually just take the labels HTML for and all of this

29
00:01:11.520 --> 00:01:14.110
and then go to your input, paste it in,

30
00:01:14.110 --> 00:01:15.680
and change that to an ID.

31
00:01:21.190 --> 00:01:22.770
And now that allows us to click the label,

32
00:01:22.770 --> 00:01:24.890
and the reason why that works is because

33
00:01:24.890 --> 00:01:28.400
if you have a ID that matches a labels,

34
00:01:28.400 --> 00:01:31.140
or sorry, if you have a labels for attribute

35
00:01:31.140 --> 00:01:33.200
that matches an input's ID,

36
00:01:33.200 --> 00:01:37.760
then you can click the label and check the associated input

37
00:01:37.760 --> 00:01:39.600
and that's really what I like.

38
00:01:39.600 --> 00:01:42.700
I hate it when websites don't have that, so that's good.

39
00:01:42.700 --> 00:01:44.100
Second thing is it's not stretching

40
00:01:44.100 --> 00:01:46.230
the entire height of this

41
00:01:46.230 --> 00:01:50.530
and that's because there is padding on the TD.

42
00:01:50.530 --> 00:01:53.410
So what we need to do is take the padding off the TD,

43
00:01:53.410 --> 00:01:54.760
it's this one right here,

44
00:01:56.650 --> 00:01:59.710
and then go to the label.

45
00:01:59.710 --> 00:02:02.060
Actually, let's just move it down to the label.

46
00:02:03.380 --> 00:02:05.801
We should get, there we go, we got the same amount

47
00:02:05.801 --> 00:02:07.870
that we're working with here.

48
00:02:07.870 --> 00:02:09.540
Looks like we're butting up a little bit here

49
00:02:09.540 --> 00:02:12.330
so let's just put a little bit of padding on this one,

50
00:02:12.330 --> 00:02:13.836
maybe five PX

51
00:02:13.836 --> 00:02:15.620
so it's not looking like too much garbage.

52
00:02:15.620 --> 00:02:17.640
Beautiful, we take the ugly red off.

53
00:02:18.510 --> 00:02:20.330
Actually, it's the same red you see everywhere else,

54
00:02:20.330 --> 00:02:23.350
so not that ugly and it looks good.

55
00:02:23.350 --> 00:02:25.010
So that's what we wanted to do,

56
00:02:25.010 --> 00:02:26.380
just a little bit of a fix there,

57
00:02:26.380 --> 00:02:28.390
jump into the style component.

58
00:02:28.390 --> 00:02:29.520
Close everything out,

59
00:02:29.520 --> 00:02:32.100
now let's start with what this video's actually about

60
00:02:32.100 --> 00:02:35.610
and what I'd like to do is to

61
00:02:35.610 --> 00:02:37.490
code the back end up for this.

62
00:02:37.490 --> 00:02:40.370
So let's flip over to the back end, just purple,

63
00:02:40.370 --> 00:02:42.820
and first thing we wanna do is open up our schema

64
00:02:44.124 --> 00:02:48.380
and go down to our mutations and add in a new mutation

65
00:02:48.380 --> 00:02:50.320
that's called update permissions.

66
00:02:51.460 --> 00:02:54.770
That will take in an array of permissions,

67
00:02:54.770 --> 00:02:58.170
which the type of that is an array of the permission

68
00:02:58.170 --> 00:03:00.390
because this is a custom type of permission

69
00:03:00.390 --> 00:03:02.530
if we look at our data model.

70
00:03:02.530 --> 00:03:04.880
You see that we created this custom type right here

71
00:03:04.880 --> 00:03:06.470
which is the enum, and again,

72
00:03:06.470 --> 00:03:10.970
just make sure that someone is only able to set these values

73
00:03:10.970 --> 00:03:13.740
and no other values that they just made up willy-nilly.

74
00:03:13.740 --> 00:03:16.090
So if you wanted to add an additional permission,

75
00:03:16.090 --> 00:03:19.260
you both need to add it in this enum as well as

76
00:03:19.260 --> 00:03:22.450
in the script file that we were working on previously.

77
00:03:22.450 --> 00:03:24.570
We also need to pass a user ID

78
00:03:24.570 --> 00:03:26.640
which is going to be a type of ID

79
00:03:26.640 --> 00:03:29.400
and that is required, so put a bang on the end there

80
00:03:29.400 --> 00:03:32.640
and from that we are just going to return the user.

81
00:03:34.010 --> 00:03:36.610
So that's good and anytime we add our schema,

82
00:03:36.610 --> 00:03:38.390
we need to open up our mutation

83
00:03:38.390 --> 00:03:40.980
and code a resolver that matches that,

84
00:03:40.980 --> 00:03:42.660
so let's go down to the bottom here,

85
00:03:42.660 --> 00:03:45.720
create a new resolver called update permissions,

86
00:03:45.720 --> 00:03:47.510
do our whole song and dance,

87
00:03:47.510 --> 00:03:51.050
parent, args, context, and info.

88
00:03:51.050 --> 00:03:52.570
We'll mark that as the sync

89
00:03:52.570 --> 00:03:53.940
and we're gonna do a couple things here.

90
00:03:53.940 --> 00:03:56.750
First, query the current user,

91
00:03:56.750 --> 00:03:59.070
actually first we should check

92
00:03:59.070 --> 00:04:01.740
if they are logged in.

93
00:04:01.740 --> 00:04:04.940
Second, query the current user,

94
00:04:05.780 --> 00:04:10.760
third, check if they have permissions to do this

95
00:04:12.300 --> 00:04:15.350
and then four, update the permissions.

96
00:04:17.700 --> 00:04:19.250
So first, check if they're logged in.

97
00:04:19.250 --> 00:04:24.010
If there's no context.request.userID

98
00:04:25.870 --> 00:04:30.220
throw a new error, must be logged in.

99
00:04:31.620 --> 00:04:34.770
Second, query the current user, so we'll say const

100
00:04:34.770 --> 00:04:37.210
current user is equal to

101
00:04:37.210 --> 00:04:38.800
await CTX.DB.query.user.

102
00:04:42.616 --> 00:04:44.466
We wanna query the current user where

103
00:04:46.730 --> 00:04:49.760
the ID is equal to the current ID.

104
00:04:49.760 --> 00:04:53.950
So CTX.request.userID,

105
00:04:53.950 --> 00:04:58.380
and then this query also needs to pass along the info,

106
00:04:58.380 --> 00:05:01.110
then check if they have permissions to do so.

107
00:05:01.110 --> 00:05:04.620
So has permission, current user, pass to current user,

108
00:05:04.620 --> 00:05:06.520
pass an array of possible permissions

109
00:05:06.520 --> 00:05:07.830
that we're looking for.

110
00:05:07.830 --> 00:05:11.230
So we're looking for either admin or permission

111
00:05:12.330 --> 00:05:13.163
update.

112
00:05:17.760 --> 00:05:19.940
And then that will throw an error if no one has it.

113
00:05:19.940 --> 00:05:22.300
Oh, we don't have this has permission imported yet,

114
00:05:22.300 --> 00:05:23.370
we did that in the query.

115
00:05:23.370 --> 00:05:26.600
So let's just open up the query resolver real quick

116
00:05:26.600 --> 00:05:30.030
and grab that import, pop it at the top of our

117
00:05:31.140 --> 00:05:32.270
imports in here.

118
00:05:33.650 --> 00:05:35.680
I'll go back down and then finally

119
00:05:35.680 --> 00:05:37.130
we need to update the permission.

120
00:05:37.130 --> 00:05:40.120
So we could either do the updated permission

121
00:05:40.120 --> 00:05:42.070
and then return the user, or, as you know,

122
00:05:42.070 --> 00:05:45.710
we can also just return the query from this resolver

123
00:05:45.710 --> 00:05:47.290
and that will work as well.

124
00:05:47.290 --> 00:05:48.870
So we're gonna return the

125
00:05:48.870 --> 00:05:50.730
context.database.mutuation.updateuser

126
00:05:53.906 --> 00:05:57.520
and that's the Prisma surface to update user method

127
00:05:57.520 --> 00:05:59.620
that we have, and from that,

128
00:05:59.620 --> 00:06:02.350
we need to pass a couple things.

129
00:06:02.350 --> 00:06:05.600
First, we wanna pass the data that needs to be updated

130
00:06:05.600 --> 00:06:08.390
and second, we wanna pass the where the data

131
00:06:08.390 --> 00:06:09.390
needs to be updated

132
00:06:09.390 --> 00:06:12.720
and then third, we wanna pass the info of the query

133
00:06:12.720 --> 00:06:14.020
to the updated user.

134
00:06:14.020 --> 00:06:17.230
So first, what data needs to be set?

135
00:06:17.230 --> 00:06:20.250
Well, the permissions needs to be set

136
00:06:20.250 --> 00:06:22.090
to the updated permissions,

137
00:06:22.090 --> 00:06:26.040
and that's coming in via the arguments of this request.

138
00:06:26.040 --> 00:06:28.980
So normally I think you'd just say args.permissions

139
00:06:28.980 --> 00:06:32.190
but because permissions is its own enum,

140
00:06:32.190 --> 00:06:36.070
we have to use this set syntax that comes along with Prisma.

141
00:06:36.070 --> 00:06:39.920
So we'll say permissions set args.permission.

142
00:06:42.910 --> 00:06:43.890
So far, so good.

143
00:06:44.940 --> 00:06:45.920
Then we'll go into here

144
00:06:45.920 --> 00:06:49.890
where the ID is equal to the args.userID

145
00:06:49.890 --> 00:06:52.540
and the reason why I'm not using context

146
00:06:52.540 --> 00:06:54.660
that request that user ID is because

147
00:06:54.660 --> 00:06:58.630
we might not necessarily be updating our own user,

148
00:06:58.630 --> 00:07:00.210
we might be updating someone else.

149
00:07:00.210 --> 00:07:03.910
So we have to pass the user ID along for the ride,

150
00:07:03.910 --> 00:07:06.260
along with the permissions.

151
00:07:07.110 --> 00:07:10.100
And that seems to have worked,

152
00:07:10.100 --> 00:07:13.710
so we'll go over to our client side and now

153
00:07:17.030 --> 00:07:18.650
so we'll go over to the client side

154
00:07:18.650 --> 00:07:20.870
and now we're adding a mutation that will fire

155
00:07:20.870 --> 00:07:23.280
as soon as you click on this update button.

156
00:07:23.280 --> 00:07:25.000
So flip over to the front end,

157
00:07:25.000 --> 00:07:27.330
open up your capital P permission component,

158
00:07:28.230 --> 00:07:30.400
and let's head up to the top here.

159
00:07:30.400 --> 00:07:32.860
Right below this possible permissions,

160
00:07:32.860 --> 00:07:35.350
either above or below the all users query,

161
00:07:35.350 --> 00:07:37.650
we're gonna write our GraphQL mutation.

162
00:07:38.810 --> 00:07:40.120
Const update

163
00:07:42.010 --> 00:07:45.350
permissions mutation is equal to GQL.

164
00:07:46.210 --> 00:07:49.050
Let's double check that we've imported that.

165
00:07:49.050 --> 00:07:49.883
Yes, we have.

166
00:07:54.890 --> 00:07:56.890
Then inside of that, we'll write a mutation

167
00:07:56.890 --> 00:08:01.650
called update permissions, takes in one argument,

168
00:08:01.650 --> 00:08:05.240
which is permissions, and that is an array of permission.

169
00:08:09.510 --> 00:08:11.460
Also takes in a user ID,

170
00:08:11.460 --> 00:08:14.310
this is just like we wrote in our schema that has an ID

171
00:08:16.570 --> 00:08:19.570
that will in turn run the function called update permissions

172
00:08:20.650 --> 00:08:22.290
or we passed the permissions.

173
00:08:23.530 --> 00:08:25.160
I'm gonna say permissions again

174
00:08:27.790 --> 00:08:30.440
and we pass the user ID,

175
00:08:31.810 --> 00:08:32.870
the user ID,

176
00:08:34.110 --> 00:08:37.890
and from that, we wanna return the ID, the permissions,

177
00:08:37.890 --> 00:08:39.340
the name, and the email.

178
00:08:40.730 --> 00:08:42.990
So that is our mutation that we have here.

179
00:08:43.990 --> 00:08:45.530
We're now gonna take this mutation,

180
00:08:45.530 --> 00:08:48.480
we're gonna import the mutation component from react apollo

181
00:08:51.210 --> 00:08:55.290
and then we need to inject this mutation into

182
00:08:55.290 --> 00:08:56.860
our user component.

183
00:08:56.860 --> 00:09:01.060
So go down here to our render of the user component.

184
00:09:01.060 --> 00:09:03.650
Right now, we're just wrapping a TR,

185
00:09:03.650 --> 00:09:06.150
so we'll go and wrap it even further.

186
00:09:07.180 --> 00:09:08.170
Say mutation,

187
00:09:09.980 --> 00:09:14.980
the mutation is going to be the update permission mutation

188
00:09:15.140 --> 00:09:16.900
and the variables for this one,

189
00:09:16.900 --> 00:09:19.160
again, you can either pass the variables

190
00:09:19.160 --> 00:09:20.500
into the mutation component,

191
00:09:20.500 --> 00:09:22.700
or you can pass them at the time of calling.

192
00:09:22.700 --> 00:09:26.380
If I can, if I do know the data at the time of othering,

193
00:09:26.380 --> 00:09:30.100
I will always pass it as a prop on mutation,

194
00:09:30.100 --> 00:09:32.730
otherwise you can pass it at the time of calling.

195
00:09:32.730 --> 00:09:34.330
So the variables that we're gonna pass,

196
00:09:34.330 --> 00:09:35.730
it's an object literal here,

197
00:09:36.691 --> 00:09:39.010
the permissions it's gonna be equal to

198
00:09:39.010 --> 00:09:41.020
this.state.permissions,

199
00:09:42.420 --> 00:09:44.770
and the user ID is equal to this.props.user.ID.

200
00:09:48.308 --> 00:09:50.050
Let's go inside this mutation and write our little

201
00:09:50.050 --> 00:09:52.330
arrow function of death that we have here.

202
00:09:52.330 --> 00:09:54.820
So that's an arrow function,

203
00:09:57.000 --> 00:09:59.180
and inside that arrow function, the first argument

204
00:09:59.180 --> 00:10:02.310
is update permissions, that's not destructured,

205
00:10:02.310 --> 00:10:05.540
but the second argument is destructured into

206
00:10:06.420 --> 00:10:08.080
loading and error.

207
00:10:09.900 --> 00:10:13.670
Then you can take this closing of your implicit return

208
00:10:13.670 --> 00:10:15.540
and the closing mutation,

209
00:10:15.540 --> 00:10:17.352
we'll go for a little bit of a ride,

210
00:10:17.352 --> 00:10:20.017
(robot noises)

211
00:10:20.017 --> 00:10:20.850
give it a save,

212
00:10:23.270 --> 00:10:24.670
everything is fixed here.

213
00:10:24.670 --> 00:10:27.530
Now we've exposed

214
00:10:30.540 --> 00:10:32.440
this function here, that should not be called updated,

215
00:10:32.440 --> 00:10:34.560
that should be called update permissions.

216
00:10:36.230 --> 00:10:40.480
Now we can run this function on our button click.

217
00:10:40.480 --> 00:10:42.480
So go down to the sick button,

218
00:10:44.980 --> 00:10:46.940
give it a type of button.

219
00:10:49.920 --> 00:10:51.640
We'll say it's disabled

220
00:10:53.630 --> 00:10:55.030
if we are currently loading,

221
00:10:55.030 --> 00:10:55.863
'cause you don't want someone

222
00:10:55.863 --> 00:10:57.170
to be able to click it multiple times,

223
00:10:57.170 --> 00:11:00.440
so if someone fires off a request,

224
00:11:00.440 --> 00:11:01.710
loading will turn true

225
00:11:01.710 --> 00:11:03.170
and that will, in turn,

226
00:11:03.170 --> 00:11:06.290
disable the sick button for being clicked a second time.

227
00:11:07.410 --> 00:11:08.690
And then on click,

228
00:11:10.790 --> 00:11:13.120
we can simply say update permissions.

229
00:11:13.120 --> 00:11:16.610
I don't think that we need to do an inline function here

230
00:11:16.610 --> 00:11:19.280
where we pass the event like we've previously done

231
00:11:19.280 --> 00:11:22.410
because we don't need to event.preventdefault here,

232
00:11:22.410 --> 00:11:25.950
we can just run that update permissions.

233
00:11:25.950 --> 00:11:28.940
Now, here's what we've all been waiting for.

234
00:11:28.940 --> 00:11:30.390
Open up our console,

235
00:11:30.390 --> 00:11:32.670
click on item create, update,

236
00:11:34.080 --> 00:11:35.090
got a bit of an error,

237
00:11:35.090 --> 00:11:37.600
and this is actually because, well, actually,

238
00:11:37.600 --> 00:11:38.780
I don't know why it's happening,

239
00:11:38.780 --> 00:11:41.640
but it's giving you like this very vague error.

240
00:11:41.640 --> 00:11:44.210
Network error, response not successful,

241
00:11:44.210 --> 00:11:45.800
and there's two ways we should do this.

242
00:11:45.800 --> 00:11:47.990
First, you should actually be displaying this to the user

243
00:11:47.990 --> 00:11:50.530
so that you can tell them what went wrong.

244
00:11:50.530 --> 00:11:53.130
But second, if you ever see these like weird 400 errors,

245
00:11:53.130 --> 00:11:55.110
you can always go to your network tab

246
00:11:55.110 --> 00:11:58.200
and find the 400 request,

247
00:11:58.200 --> 00:11:59.290
and that will actually give you

248
00:11:59.290 --> 00:12:01.160
the error message that we have there.

249
00:12:01.160 --> 00:12:04.730
But let's actually go ahead and fix this, first of all.

250
00:12:04.730 --> 00:12:07.440
So we have this updated permissions.

251
00:12:07.440 --> 00:12:11.040
What we can do is, if we have an error,

252
00:12:11.950 --> 00:12:14.720
then we can simply render out the error component.

253
00:12:16.000 --> 00:12:18.150
Otherwise, or we can use the and and here.

254
00:12:21.270 --> 00:12:23.400
Then, because these are two siblings,

255
00:12:23.400 --> 00:12:26.190
we need to wrap them in a react fragment.

256
00:12:30.800 --> 00:12:34.390
And that'll allow us to return to sibling elements.

257
00:12:34.390 --> 00:12:37.330
So only if we have an error,

258
00:12:37.330 --> 00:12:40.050
we need to return actually a table row

259
00:12:41.780 --> 00:12:42.613
with

260
00:12:44.270 --> 00:12:45.520
an error inside of it.

261
00:12:46.660 --> 00:12:49.620
That should look pretty good, let's update,

262
00:12:49.620 --> 00:12:50.453
there we go.

263
00:12:50.453 --> 00:12:51.450
Shoot could not query,

264
00:12:53.800 --> 00:12:55.340
probably also wanna pass a TD

265
00:13:00.250 --> 00:13:01.083
in there

266
00:13:03.410 --> 00:13:06.450
with a colspan of three or four

267
00:13:09.430 --> 00:13:10.263
or eight.

268
00:13:11.200 --> 00:13:14.540
There we go, so every time if any of these goof up,

269
00:13:14.540 --> 00:13:16.560
you're gonna get a little error that goes above it.

270
00:13:16.560 --> 00:13:19.180
So now let's focus on what is the actual error.

271
00:13:19.180 --> 00:13:22.740
Shoot cannot query field updated permissions

272
00:13:22.740 --> 00:13:24.330
on type mutation.

273
00:13:24.330 --> 00:13:27.160
Did you mean update permissions?

274
00:13:27.160 --> 00:13:30.380
Ah, okay, so where did we goof that up?

275
00:13:30.380 --> 00:13:33.990
Ah, I said updated permission, it's update permissions,

276
00:13:33.990 --> 00:13:36.830
and same with this one, it's update permissions.

277
00:13:36.830 --> 00:13:37.663
Give it a save,

278
00:13:37.663 --> 00:13:38.740
this is the one that actually really matters.

279
00:13:38.740 --> 00:13:42.430
This is just the name that we're naming it, client side.

280
00:13:42.430 --> 00:13:44.630
So I bet, let's give it a good refresh here,

281
00:13:44.630 --> 00:13:48.550
if I were to add some new values, update,

282
00:13:49.480 --> 00:13:50.313
and it worked.

283
00:13:50.313 --> 00:13:53.090
You see that it just temporarily goes blank there?

284
00:13:53.090 --> 00:13:54.770
We can do a little bit better than that

285
00:13:54.770 --> 00:13:57.130
and go down to our sick button.

286
00:13:57.130 --> 00:14:00.850
So remove the E off that and we'll say if it's loading,

287
00:14:02.150 --> 00:14:03.770
then give ourselves an ING,

288
00:14:03.770 --> 00:14:05.270
otherwise give ourselves an E.

289
00:14:08.850 --> 00:14:10.720
Ah, look how awesome that is.

290
00:14:12.840 --> 00:14:14.630
So let's check now.

291
00:14:14.630 --> 00:14:19.630
If I were to add some of these values here, and refresh,

292
00:14:21.370 --> 00:14:22.500
they'd stay there.

293
00:14:22.500 --> 00:14:24.920
They're going into the database now

294
00:14:24.920 --> 00:14:26.850
because if I were to update it,

295
00:14:29.030 --> 00:14:31.180
they stay there, they are going into the database

296
00:14:31.180 --> 00:14:33.220
because I do a quick refresh,

297
00:14:33.220 --> 00:14:34.770
all the values are still there.

298
00:14:34.770 --> 00:14:38.150
So that is our whole kinda circle of permissions,

299
00:14:38.150 --> 00:14:39.760
not the easiest thing to do,

300
00:14:39.760 --> 00:14:41.540
but what I find with these things

301
00:14:41.540 --> 00:14:44.438
is once you have coded your first permission system,

302
00:14:44.438 --> 00:14:46.490
you can move that, those ideas,

303
00:14:46.490 --> 00:14:49.480
and even the code, to a whole bunch of other ones

304
00:14:49.480 --> 00:14:51.630
and even this whole permissions component

305
00:14:51.630 --> 00:14:53.930
would be fairly easy to move from project to project.

306
00:14:53.930 --> 00:14:56.530
So, one last thing I wanted to show you is

307
00:14:56.530 --> 00:14:58.580
something that I actually stumble upon all the time

308
00:14:58.580 --> 00:15:00.980
and what if you wanted to call

309
00:15:00.980 --> 00:15:03.500
this update permissions function

310
00:15:03.500 --> 00:15:05.730
inside of the on change handler,

311
00:15:05.730 --> 00:15:07.770
meaning that after we actually do it,

312
00:15:07.770 --> 00:15:09.470
every single time that we make a change,

313
00:15:09.470 --> 00:15:11.450
maybe it should just update automatically

314
00:15:11.450 --> 00:15:13.900
so we don't have to remember to click the update button

315
00:15:13.900 --> 00:15:15.790
'cause that could be a potential issue.

316
00:15:15.790 --> 00:15:17.840
So I'm always like, oh, that's super easy, right?

317
00:15:17.840 --> 00:15:21.270
You just have to call this update permissions function

318
00:15:21.270 --> 00:15:23.560
inside of our, oh.

319
00:15:24.460 --> 00:15:29.070
How do you get one of these functions

320
00:15:29.070 --> 00:15:32.170
like that is exposed via our mutation,

321
00:15:32.170 --> 00:15:34.170
how do you get that outside, right?

322
00:15:34.170 --> 00:15:38.030
Because if it's being exposed by this render prop,

323
00:15:38.030 --> 00:15:40.368
you can't do a render prop inside of here

324
00:15:40.368 --> 00:15:43.680
and I think this is a bit of a downside to render props,

325
00:15:43.680 --> 00:15:45.460
but I'm gonna show you how to do it anyways.

326
00:15:45.460 --> 00:15:48.540
So the way that it would work

327
00:15:48.540 --> 00:15:51.080
is you change this on change,

328
00:15:51.080 --> 00:15:52.160
and you don't have to do this,

329
00:15:52.160 --> 00:15:54.300
I'm gonna revert it for the end of this video,

330
00:15:54.300 --> 00:15:55.980
but the way that you can do it

331
00:15:55.980 --> 00:15:59.160
is you can run an inline function

332
00:15:59.160 --> 00:16:00.340
that passes the event

333
00:16:01.700 --> 00:16:05.360
and then you run the this.handle permission change

334
00:16:05.360 --> 00:16:08.210
and pass the event, but then you, as a second argument,

335
00:16:08.210 --> 00:16:12.060
you could also pass the function that you wish to call.

336
00:16:12.060 --> 00:16:15.320
So that's called update permissions.

337
00:16:16.310 --> 00:16:17.710
And I'll give that a save.

338
00:16:17.710 --> 00:16:21.700
Then we can go up to our handle permission change function

339
00:16:21.700 --> 00:16:25.090
and change it so that it takes in the event, of course,

340
00:16:25.090 --> 00:16:28.710
but also takes in the update permissions.

341
00:16:28.710 --> 00:16:32.460
Man, I don't like this update, it updated permissions,

342
00:16:32.460 --> 00:16:34.010
it's too close to each other.

343
00:16:34.010 --> 00:16:36.130
But now we have access to this function

344
00:16:36.130 --> 00:16:38.328
that was exposed via the render prop,

345
00:16:38.328 --> 00:16:41.530
and then the last thing we can do after we set state

346
00:16:41.530 --> 00:16:45.186
is if we can just call the update permissions function

347
00:16:45.186 --> 00:16:47.900
(mumbling) or inside of this thing here.

348
00:16:47.900 --> 00:16:50.570
So that should now allow us every single time

349
00:16:50.570 --> 00:16:51.780
that I change one of these,

350
00:16:51.780 --> 00:16:54.262
you see that it just flips to the updating state

351
00:16:54.262 --> 00:16:55.590
without us having to.

352
00:16:55.590 --> 00:16:57.170
We can still manually update it ourselves

353
00:16:57.170 --> 00:16:58.340
by clicking the button,

354
00:16:58.340 --> 00:17:00.070
but it will also trigger that for us.

355
00:17:00.070 --> 00:17:02.480
So it's a pretty neat little way of doing it.

356
00:17:02.480 --> 00:17:05.700
I'm gonna revert it, so remove,

357
00:17:05.700 --> 00:17:08.620
take that out, but feel free to keep that in there

358
00:17:08.620 --> 00:17:10.400
if you like that functionality.

359
00:17:10.400 --> 00:17:11.280
And we change

360
00:17:12.550 --> 00:17:13.910
this to

361
00:17:14.755 --> 00:17:15.588
that.

362
00:17:20.605 --> 00:17:23.610
And everything still works.

363
00:17:23.610 --> 00:17:26.270
Beautiful, so we got a couple little more things to do

364
00:17:26.270 --> 00:17:27.240
in the next permission video,

365
00:17:27.240 --> 00:17:29.090
and then we're done with permissions.

