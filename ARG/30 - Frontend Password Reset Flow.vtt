WEBVTT

1
00:00:00.870 --> 00:00:01.960
<v Wes>Let's jump over to the front end</v>

2
00:00:01.960 --> 00:00:04.740
and build the actual form to request the reset.

3
00:00:04.740 --> 00:00:08.940
So what I want you to do is open up the Signin.js component.

4
00:00:11.110 --> 00:00:13.780
I want you to just to save that as RequestReset

5
00:00:14.890 --> 00:00:15.930
in your components folder.

6
00:00:15.930 --> 00:00:16.763
Capital RR.

7
00:00:17.800 --> 00:00:18.810
Then we're gonna do a few things.

8
00:00:18.810 --> 00:00:22.750
First, we don't need that and this SIGNIN_MUTATION

9
00:00:22.750 --> 00:00:26.030
is going to be called REQUEST_RESET_MUTATION.

10
00:00:29.779 --> 00:00:30.633
That request RESET_MUTATION, gets passed to here.

11
00:00:33.840 --> 00:00:37.100
There is no refetchQuery that gets passed here.

12
00:00:37.100 --> 00:00:39.500
Our state only needs an email address.

13
00:00:39.500 --> 00:00:41.840
The REQUEST_RESET_MUTATIO only needs

14
00:00:41.840 --> 00:00:43.610
an email address passed to it.

15
00:00:43.610 --> 00:00:47.480
It then needs to call requestReset function.

16
00:00:47.480 --> 00:00:49.203
Only passing in email.

17
00:00:51.410 --> 00:00:53.590
And back from that, what does that return to us?

18
00:00:53.590 --> 00:00:55.210
The way we can tell is we can just take a look

19
00:00:55.210 --> 00:00:56.560
at our schema.

20
00:00:56.560 --> 00:00:58.903
And requestReset is a success message.

21
00:00:59.785 --> 00:01:02.440
So, back from that we just want a message.

22
00:01:02.440 --> 00:01:06.570
Good, got that saved as state, we've got our mutation.

23
00:01:06.570 --> 00:01:07.850
Blah, blah, blah, okay.

24
00:01:07.850 --> 00:01:09.410
When we do have the mutation,

25
00:01:09.410 --> 00:01:10.970
this is not gonna be called signup,

26
00:01:10.970 --> 00:01:13.460
it's gonna be called reset.

27
00:01:13.460 --> 00:01:14.860
Then when someone submits it,

28
00:01:14.860 --> 00:01:19.113
we're going to prevent default and call reset.

29
00:01:20.120 --> 00:01:23.280
And then we just need to set the email to be nothing.

30
00:01:23.280 --> 00:01:26.023
Change this to say request a password reset.

31
00:01:31.170 --> 00:01:33.793
And we obviously don't need the password.

32
00:01:36.490 --> 00:01:40.163
And the button should say Request Reset.

33
00:01:41.000 --> 00:01:43.450
Let's try, go to our page called Signup

34
00:01:43.450 --> 00:01:45.303
and let's import that.

35
00:01:46.700 --> 00:01:48.230
And we now have this showing up.

36
00:01:48.230 --> 00:01:50.400
The one thing we don't have is how do we tell

37
00:01:50.400 --> 00:01:51.700
if it's been called or not?

38
00:01:51.700 --> 00:01:52.810
And there's two options here.

39
00:01:52.810 --> 00:01:56.160
First, we could either capture the success message

40
00:01:56.160 --> 00:01:58.760
that comes back from this, right here.

41
00:01:58.760 --> 00:02:03.170
So we could say like const success

42
00:02:04.540 --> 00:02:06.200
is equal to await reset.

43
00:02:06.200 --> 00:02:08.470
And then we could take the success message,

44
00:02:08.470 --> 00:02:12.210
set it to state, and then display it somewhere down here.

45
00:02:12.210 --> 00:02:14.110
Or, another way we could do it and this is the way

46
00:02:14.110 --> 00:02:15.290
we're going to be doing it now

47
00:02:15.290 --> 00:02:17.230
is in addition to error and loading,

48
00:02:17.230 --> 00:02:19.900
it will also pass you a called property

49
00:02:19.900 --> 00:02:21.700
and the called property will be a Boolean

50
00:02:21.700 --> 00:02:24.200
whether or not this mutation has been called yet.

51
00:02:24.200 --> 00:02:26.880
So what we can do down here, right below error,

52
00:02:26.880 --> 00:02:29.303
we'll check if there's no error.

53
00:02:31.290 --> 00:02:33.713
And it's not loading.

54
00:02:35.660 --> 00:02:37.943
And, it's being called.

55
00:02:39.390 --> 00:02:42.170
Then we're gonna have, give ourselves a paragraph,

56
00:02:42.170 --> 00:02:47.170
success, check your email for a reset link.

57
00:02:52.600 --> 00:02:53.970
Now we go here.

58
00:02:53.970 --> 00:02:55.163
Request a reset.

59
00:02:57.150 --> 00:02:59.710
It went, success, check your email for a reset link.

60
00:02:59.710 --> 00:03:03.480
And we check our terminal here.

61
00:03:03.480 --> 00:03:06.290
You see, this is the ID, it's being logged.

62
00:03:06.290 --> 00:03:07.123
Why?

63
00:03:07.123 --> 00:03:09.040
Let's flip over to our backend real quick.

64
00:03:09.040 --> 00:03:10.790
Open up our mutation.

65
00:03:10.790 --> 00:03:12.140
You'll see that we've got the cobsole.log

66
00:03:12.140 --> 00:03:13.260
which is what this is.

67
00:03:13.260 --> 00:03:16.360
You generally don't want to console.log any of this

68
00:03:16.360 --> 00:03:18.440
especially in production because that way

69
00:03:19.520 --> 00:03:21.530
there's a potential that your reset token,

70
00:03:21.530 --> 00:03:25.363
which is sensitive, you have to treat that as a password.

71
00:03:26.200 --> 00:03:28.700
That should never be in like server logs

72
00:03:28.700 --> 00:03:32.210
or things like that, so we wanna take that out of there,

73
00:03:32.210 --> 00:03:34.200
so that it doesn't actually accidentally get

74
00:03:34.200 --> 00:03:35.920
into the wrong hands.

75
00:03:35.920 --> 00:03:40.400
And we are in good shape, on the front end.

76
00:03:40.400 --> 00:03:43.730
Awesome, now we need to actually hit the Reset page.

77
00:03:43.730 --> 00:03:45.903
So we need to have a new page.

78
00:03:46.900 --> 00:03:49.090
Let's go to our Pages folder.

79
00:03:49.090 --> 00:03:52.810
And I'm just gonna open up the sell.js.

80
00:03:52.810 --> 00:03:55.990
Resave that as reset.js.

81
00:03:55.990 --> 00:04:00.350
And let's just put a paragraph, Reset Your Password.

82
00:04:00.350 --> 00:04:03.053
And we should be able to visit /reset.

83
00:04:05.445 --> 00:04:07.300
There we go, it says Reset Your Password.

84
00:04:07.300 --> 00:04:09.560
Now you see that I have, I'm just gonna go

85
00:04:09.560 --> 00:04:12.070
and grab a updated token here.

86
00:04:12.070 --> 00:04:14.910
And I'm gonna pass that as a reset token.

87
00:04:14.910 --> 00:04:17.690
Capital T via Query Param.

88
00:04:17.690 --> 00:04:19.570
And let's just double check that we can display that

89
00:04:19.570 --> 00:04:23.323
on the page, props.url.query.resestToken.

90
00:04:27.650 --> 00:04:29.560
And, oh, the error there.

91
00:04:29.560 --> 00:04:31.223
Maybe it's just props.query.

92
00:04:33.198 --> 00:04:35.070
There we go, props.query.resetToken.

93
00:04:35.070 --> 00:04:37.160
That's how we have it so what we're going to do

94
00:04:37.160 --> 00:04:41.050
is we're going to create another component called reset.

95
00:04:41.050 --> 00:04:43.713
So go into your components, make a capital R reset.

96
00:04:45.177 --> 00:04:46.010
.JS.

97
00:04:46.010 --> 00:04:47.940
So I'm just gonna go ahead and take everything

98
00:04:47.940 --> 00:04:50.890
from our RequestReset.js and paste it

99
00:04:50.890 --> 00:04:54.280
into reset.js because they are going to be fairly similar.

100
00:04:54.280 --> 00:04:56.730
We wanna change this mutation here,

101
00:04:56.730 --> 00:04:58.880
there's three different spots,

102
00:04:58.880 --> 00:05:01.690
yeah, three different spots that we are referencing it.

103
00:05:01.690 --> 00:05:04.547
And that's just going to be called the RESET_MUTATION.

104
00:05:05.640 --> 00:05:08.700
That RESET_MUTATION is going to take in three arguments.

105
00:05:08.700 --> 00:05:10.760
So we no longer need to take in an email,

106
00:05:10.760 --> 00:05:14.070
we just need to take in the reset token.

107
00:05:14.070 --> 00:05:16.780
That's the thing that's coming in via to URL here

108
00:05:16.780 --> 00:05:19.252
and that is a string that is required.

109
00:05:19.252 --> 00:05:21.608
We also want to take in the user's new password,

110
00:05:21.608 --> 00:05:25.321
which is password, that is a string that is required.

111
00:05:25.321 --> 00:05:28.379
And then we also wanna take in the confirmPassword.

112
00:05:28.379 --> 00:05:29.670
Cause we're gonna ask them to pass the password

113
00:05:29.670 --> 00:05:32.280
and then confirm it so they don't goof that up.

114
00:05:32.280 --> 00:05:35.330
The reason why I am passing the confirmPassword

115
00:05:35.330 --> 00:05:38.370
to the backend, is that I'm billing an API

116
00:05:38.370 --> 00:05:41.330
and regardless of where this API is being used,

117
00:05:41.330 --> 00:05:43.160
I always wanna make sure that the user confirms

118
00:05:43.160 --> 00:05:45.010
the password and we check it on the server.

119
00:05:45.010 --> 00:05:47.460
And this not just a client side check that I wanna do.

120
00:05:47.460 --> 00:05:49.920
You could do it on the client side, but that means

121
00:05:49.920 --> 00:05:53.540
if you ever were to have a RESET_MUTATION anywhere else

122
00:05:53.540 --> 00:05:56.280
in the application, you would also need to do that.

123
00:05:56.280 --> 00:05:58.800
So I prefer to do it on the server side.

124
00:05:58.800 --> 00:06:01.000
Then, here we are going to change the function

125
00:06:01.000 --> 00:06:03.763
from requestReset to resetPassword.

126
00:06:06.300 --> 00:06:09.960
And that is going to take in these three variables

127
00:06:09.960 --> 00:06:10.793
that we have here.

128
00:06:10.793 --> 00:06:14.020
Let me see if I can just fancy copy them.

129
00:06:14.020 --> 00:06:16.027
So the resetToken

130
00:06:19.790 --> 00:06:22.930
The dollar sign is going to be equal to the variable there.

131
00:06:22.930 --> 00:06:25.570
The password is going to be equal to the password.

132
00:06:25.570 --> 00:06:30.570
And the confirmPassword is equal to the dollar sign.

133
00:06:30.859 --> 00:06:32.060
ConfirmPassword.

134
00:06:32.060 --> 00:06:34.450
Good, back from that we are gonna return to user.

135
00:06:34.450 --> 00:06:37.300
So we wanna get their ID, we want their email,

136
00:06:37.300 --> 00:06:40.440
and we want their name and that information is gonna

137
00:06:40.440 --> 00:06:43.960
to be helpful in re-fetching the currently logged in user.

138
00:06:43.960 --> 00:06:47.090
Next let's rename this signin both at the export

139
00:06:47.090 --> 00:06:50.023
and the definition and we'll call that Reset.

140
00:06:51.190 --> 00:06:55.100
The state of this is going to take in just a password

141
00:06:56.040 --> 00:06:59.240
which is set to nothing and a confirmPassword,

142
00:06:59.240 --> 00:07:01.060
which is also set to nothing.

143
00:07:01.060 --> 00:07:01.970
We'll leave the saveToState

144
00:07:01.970 --> 00:07:04.163
cause that's going to be helpful for us.

145
00:07:05.400 --> 00:07:08.610
Then inside of our render, we have this mutation,

146
00:07:08.610 --> 00:07:10.010
which is a RESET_MUTATION.

147
00:07:10.010 --> 00:07:12.610
Our variables is not going to be this.state,

148
00:07:12.610 --> 00:07:14.630
but let's actually pass an object literal.

149
00:07:14.630 --> 00:07:15.820
So remove that.

150
00:07:15.820 --> 00:07:18.730
The three things that are needed to pass well,

151
00:07:18.730 --> 00:07:21.710
we need the resetToken, we need the password,

152
00:07:21.710 --> 00:07:23.080
and we need the confirmPassword.

153
00:07:23.080 --> 00:07:25.820
So if we go down here, and run those,

154
00:07:25.820 --> 00:07:28.790
it's going to be equal to this.props.resetToken.

155
00:07:29.650 --> 00:07:31.580
And remember that's coming from the URL,

156
00:07:31.580 --> 00:07:34.480
so let's double check, let's go back to our page

157
00:07:34.480 --> 00:07:37.290
which is called resetToken and we're not actually

158
00:07:37.290 --> 00:07:39.560
rendering it out on this page just yet.

159
00:07:39.560 --> 00:07:43.540
But it is going to passed down to this one via props.

160
00:07:43.540 --> 00:07:46.683
The password is this.state.password,

161
00:07:47.670 --> 00:07:51.887
and the confirm password is this.state.confirmPassword.

162
00:07:52.890 --> 00:07:55.580
We can add a quick prop type for this resetToken,

163
00:07:55.580 --> 00:07:57.090
I'll go up to the top here.

164
00:07:57.090 --> 00:07:59.140
Static, propTypes

165
00:08:00.860 --> 00:08:01.743
is equal to.

166
00:08:02.930 --> 00:08:04.440
One thing that is getting passed in

167
00:08:04.440 --> 00:08:06.103
is called the resetToken.

168
00:08:07.591 --> 00:08:11.924
And it's going to be of propTypes.string.isRequired.

169
00:08:17.048 --> 00:08:19.715
And we need to import propTypes.

170
00:08:31.916 --> 00:08:33.070
So we've out our mutation,

171
00:08:33.070 --> 00:08:35.870
we are passing our variables successfully.

172
00:08:35.870 --> 00:08:39.070
Inside this field set now we are going to not say

173
00:08:39.070 --> 00:08:41.450
request a reset password reset

174
00:08:41.450 --> 00:08:44.363
but we're going to Reset Your Password.

175
00:08:45.810 --> 00:08:47.460
We'll have our error, that is good.

176
00:08:47.460 --> 00:08:50.180
We can get rid of this check here where error loading.

177
00:08:50.180 --> 00:08:52.320
So remove that.

178
00:08:52.320 --> 00:08:55.060
We no longer need the email

179
00:08:55.060 --> 00:08:57.470
because it's going to be a password.

180
00:08:57.470 --> 00:09:02.470
So I'm just going to change this over to password.

181
00:09:05.130 --> 00:09:07.580
Change this to password.

182
00:09:07.580 --> 00:09:09.500
So label for password.

183
00:09:09.500 --> 00:09:11.730
Type, password, name is password,

184
00:09:11.730 --> 00:09:16.420
placeholder is password, value this.state.password.

185
00:09:16.420 --> 00:09:18.480
And onChange saveToState.

186
00:09:18.480 --> 00:09:20.920
Good, and then we need to just duplicate that

187
00:09:20.920 --> 00:09:22.770
for the confirm password.

188
00:09:22.770 --> 00:09:26.523
So, confirm your password.

189
00:09:27.845 --> 00:09:30.720
I'm gonna change all of these to,

190
00:09:30.720 --> 00:09:32.263
what did we call it in state?

191
00:09:33.359 --> 00:09:34.692
ConfirmPassword.

192
00:09:39.780 --> 00:09:41.150
And then we'll change the button

193
00:09:41.150 --> 00:09:45.123
that says Reset Your Password.

194
00:09:46.720 --> 00:09:47.580
I think that's good,

195
00:09:47.580 --> 00:09:49.810
let's get it showing up on this page here.

196
00:09:49.810 --> 00:09:52.410
So we'll go back to our actual reset page

197
00:09:52.410 --> 00:09:53.960
and import that component.

198
00:09:53.960 --> 00:09:57.683
So we can actually just reuse this to reset.

199
00:09:58.520 --> 00:10:02.210
Then we can go ahead and use the reset component

200
00:10:02.210 --> 00:10:05.440
and of course we need to pass the resetToken as a prop

201
00:10:05.440 --> 00:10:08.280
'cause remember, we're expecting it to be passed in,

202
00:10:08.280 --> 00:10:11.730
that's why we went ahead and did a propType there.

203
00:10:11.730 --> 00:10:14.530
And we can pass it in via saying props.query.resetToken.

204
00:10:16.600 --> 00:10:19.060
Let's go ahead and give it a shot.

205
00:10:19.060 --> 00:10:22.120
So when we submit this form it is going to call

206
00:10:22.120 --> 00:10:26.010
the onSubmit, which will in turn prevent the default.

207
00:10:26.010 --> 00:10:28.440
It will run our mutation, which is called Reset.

208
00:10:28.440 --> 00:10:30.780
And, oh, actually we do not need this.

209
00:10:30.780 --> 00:10:34.120
This setState actually can be changed to password.

210
00:10:34.120 --> 00:10:38.460
We can reset that and confirmPassword is nothing.

211
00:10:38.460 --> 00:10:40.400
So let's see if it worked!

212
00:10:40.400 --> 00:10:43.280
I'm gonna change my new password to Wes and whoa!

213
00:10:43.280 --> 00:10:44.703
Bit of an issue there.

214
00:10:45.718 --> 00:10:47.789
Oh, the type is not confirmPassword.

215
00:10:47.789 --> 00:10:49.213
The type is still password.

216
00:10:50.195 --> 00:10:52.200
There we go and ready, cross your fingers.

217
00:10:52.200 --> 00:10:53.883
It might not work, probably not.

218
00:10:54.900 --> 00:10:58.020
Bah, shoot this token is either invalid or oh, you know why?

219
00:10:58.020 --> 00:10:59.680
It's 'cause I had lunch.

220
00:10:59.680 --> 00:11:03.560
I had lunch in between, so that's no problem.

221
00:11:03.560 --> 00:11:06.620
But what we do need to do is go ahead

222
00:11:06.620 --> 00:11:09.150
and make a new token for ourselves.

223
00:11:09.150 --> 00:11:12.010
So yours might have worked, but let's hold on a second.

224
00:11:12.010 --> 00:11:14.360
I'm going to go ahead and make a new token, so.

225
00:11:15.610 --> 00:11:18.003
Go back to that signup page.

226
00:11:19.490 --> 00:11:20.763
Put my email in.

227
00:11:22.260 --> 00:11:23.490
Request a reset.

228
00:11:23.490 --> 00:11:26.260
Good, obviously we haven't hooked up our email yet.

229
00:11:26.260 --> 00:11:30.310
So I need to go either into the console or into my database

230
00:11:30.310 --> 00:11:32.160
to get that token.

231
00:11:32.160 --> 00:11:33.913
So we'll do that now.

232
00:11:42.150 --> 00:11:45.480
So I'm gonna go back and swap out that resetToken.

233
00:11:47.110 --> 00:11:49.800
Good, now I'm going to change my password to Wes.

234
00:11:49.800 --> 00:11:51.160
Reset your password.

235
00:11:51.160 --> 00:11:53.560
Boom, looks like it worked.

236
00:11:53.560 --> 00:11:55.200
I don't really know if it worked

237
00:11:55.200 --> 00:11:58.030
because we didn't provide any success message.

238
00:11:58.030 --> 00:12:01.270
But, what is actually gonna happen is if it worked properly,

239
00:12:01.270 --> 00:12:03.020
it's actually going to log us in.

240
00:12:03.020 --> 00:12:07.010
So if we go ahead and sign out here and try to sign in,

241
00:12:07.010 --> 00:12:09.360
looks like we are immediately signed in there.

242
00:12:09.360 --> 00:12:11.670
And that's the kind of same idea I wanna have

243
00:12:11.670 --> 00:12:13.020
when you request a reset.

244
00:12:13.020 --> 00:12:15.720
So, how do we do that?

245
00:12:15.720 --> 00:12:18.159
Well, the answer to that is we use something called

246
00:12:18.159 --> 00:12:21.120
a refetchQuery in our mutation.

247
00:12:21.120 --> 00:12:23.750
So, if we open up our user component,

248
00:12:23.750 --> 00:12:25.820
you'll see that we have this CURRENT_USER_QUERY.

249
00:12:25.820 --> 00:12:28.580
We actually want to refetch the CURRENT_USER_QUERY,

250
00:12:28.580 --> 00:12:31.180
so that if the person has changed,

251
00:12:31.180 --> 00:12:33.130
if the currently logged in person has changed,

252
00:12:33.130 --> 00:12:35.580
then Apollo will automatically go back to the server

253
00:12:35.580 --> 00:12:37.650
and refetch who is currently signed in.

254
00:12:37.650 --> 00:12:38.900
It's exactly what we wanna do.

255
00:12:38.900 --> 00:12:42.000
So we'll go back to our reset.js.

256
00:12:42.000 --> 00:12:45.650
Go up to the top, and we'll import the,

257
00:12:45.650 --> 00:12:47.058
what is it called?

258
00:12:47.058 --> 00:12:48.970
CURRENT_USER_QUERY and the reason why

259
00:12:48.970 --> 00:12:50.570
we can import is 'cause if you go

260
00:12:50.570 --> 00:12:52.020
to the bottom of user.js,

261
00:12:52.020 --> 00:12:55.540
you see that we've exported it as a named export.

262
00:12:55.540 --> 00:13:00.310
So, import CURRENT_USER_QUERY from the /user component.

263
00:13:00.310 --> 00:13:03.310
And then we can go down to our mutation here,

264
00:13:03.310 --> 00:13:07.170
and we say refetchQueries is equal to

265
00:13:07.170 --> 00:13:10.610
and it's an array of queries cause it could be multiple.

266
00:13:10.610 --> 00:13:13.527
And the query that we want to refetch

267
00:13:14.740 --> 00:13:18.007
is going to be called the CURRENT_USER_QUERY.

268
00:13:19.370 --> 00:13:24.370
So what this means is that, when this mutation

269
00:13:24.500 --> 00:13:28.500
has successfully been called, are there other queries

270
00:13:28.500 --> 00:13:32.030
that should be refeteched and refreshed of their date?

271
00:13:32.030 --> 00:13:34.710
And of course we wanna refresh the CURRENT_USER_QUERY.

272
00:13:34.710 --> 00:13:38.703
So, let's try the whole, sort of roundtrip once more.

273
00:13:40.150 --> 00:13:41.513
Gonna reset my password.

274
00:13:42.480 --> 00:13:44.973
Gonna go up here and refresh the data.

275
00:13:46.160 --> 00:13:50.160
And open it up, gonna grab my token.

276
00:13:50.160 --> 00:13:54.700
Gonna go to the reset page and pass in my new token.

277
00:13:54.700 --> 00:13:57.062
You see, oh, make sure that you're signed out

278
00:13:57.062 --> 00:13:59.553
and then I'm gonna reset my new password.

279
00:14:00.800 --> 00:14:04.100
Run it, and bam you see that this automatically changed?

280
00:14:04.100 --> 00:14:06.240
I find that that's probably the best way to show the user

281
00:14:06.240 --> 00:14:09.250
that it worked because you're automatically signed in.

282
00:14:09.250 --> 00:14:11.790
You could put a some sort of success message here as well.

283
00:14:11.790 --> 00:14:13.610
But I find that just clearing it, you could also

284
00:14:13.610 --> 00:14:16.340
just route to the home page and show the user

285
00:14:16.340 --> 00:14:17.436
that they're signed in.

286
00:14:17.436 --> 00:14:19.070
That's really, really nice.

287
00:14:19.070 --> 00:14:21.560
You see that there's no refreshing of the page

288
00:14:21.560 --> 00:14:23.990
or telling the user to check their email

289
00:14:23.990 --> 00:14:26.130
or something, or to re-login

290
00:14:26.130 --> 00:14:30.070
because, if they have this token, there's no reason why

291
00:14:30.070 --> 00:14:31.770
you couldn't just immediately log them in.

292
00:14:31.770 --> 00:14:33.210
And that's exactly what we're doing here.

293
00:14:33.210 --> 00:14:36.780
So, that whole reset flow seems to be working,

294
00:14:36.780 --> 00:14:38.520
the missing piece that we have now

295
00:14:38.520 --> 00:14:40.340
is that I have to go into the database

296
00:14:40.340 --> 00:14:42.760
and copy this token right here.

297
00:14:42.760 --> 00:14:44.840
What we're gonna do in the next video is actually email

298
00:14:44.840 --> 00:14:47.650
this token to the user to that we can confirm

299
00:14:47.650 --> 00:14:50.050
that if they are resetting their password

300
00:14:50.050 --> 00:14:52.340
then they must have access to that email address

301
00:14:52.340 --> 00:14:54.590
otherwise they shouldn't be allowed to do so.

